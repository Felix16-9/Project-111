# -*- coding: utf-8 -*-
"""C111 project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hqiK57GiKO9-qnOF-tSwQq7g-9AagIr3
"""

from google.colab import files
data_to_load = files.upload()

import plotly.figure_factory as ff 
import plotly.graph_objects as go
import statistics
import pandas as pd 
import csv
import random

df = pd.read_csv("medium_data.csv")
data = df["claps"].tolist()

fig = ff.create_distplot([data], ["claps"], show_hist = False)

fig.show()
 
mean = statistics.mean(data)
standard_deviation =  statistics.stdev(data)

def random_set_of_mean(counter):
    dataSet = []
    for i in range(0,counter):
        random_index = random.randint(0,len(data)-1)
        value = data[random_index]
        dataSet.append(value)
    mean = statistics.mean(dataSet)
    return mean

mean_list = []
for i in range(0,1000):
    set_of_mean = random_set_of_mean(100)
    mean_list.append(set_of_mean)

standard_deviation = statistics.stdev(mean_list)


first_standard_deviation_start, first_standard_deviation_end = mean - standard_deviation, mean + standard_deviation

second_standard_deviation_start,second_standard_deviation_end =  mean - (2*standard_deviation), mean + (2*standard_deviation)
 
third_standard_deviation_start,third_standard_deviation_end  = mean - (3*standard_deviation), mean + (3*standard_deviation)

df = pd.read_csv("medium_data.csv")
data = df["claps"].tolist()       
mean_of_sample1 = statistics.mean(data)
print("mean of sample1: ",mean_of_sample1)
ff = create_distplot([mean_list],["data"], show_hist = False) 
fig.add_trace(go.Scatter(x = [mean, mean], y = [0,0.17], mode = "lines", name = ("mean")))
fig.add_trace(go.Scatter(x = [mean_of_sample1, mean_of_sample1], y = [0,0.17] , mode = "lines", name = ("mean of article")))
fig.add_trace(go.Scatter(x = [second_standard_devition_end, second_standard_devition_end], y = [0,0.17], mode = "lines", name = ("standardDeviation2end")))
fig.add_trace(go.Scatter(x = [third_standard_devition_end, third_standard_devition_end], y = [0,0.17], mode = "lines", name = ("standardDeviation3end")))

fig.show()

df = pd.read_csv("medium_data.csv")
data = df["claps"].tolist()       
mean_of_sample2 = statistics.mean(data)
print("mean of sample2: ",mean_of_sample2)
ff = create_distplot([mean_list],["data"], show_hist = False) 
fig.add_trace(go.Scatter(x = [mean, mean], y = [0,0.17], mode = "lines", name = ("mean")))
fig.add_trace(go.Scatter(x = [mean_of_sample2, mean_of_sample2], y = [0,0.17] , mode = "lines", name = ("mean of data")))
fig.add_trace(go.Scatter(x = [second_standard_devition_end, second_standard_deviation_end], y = [0,0.17], mode = "lines", name = ("standardDeviation2end")))
fig.add_trace(go.Scatter(x = [third_standard_devition_end, third_standard_deviation_end], y = [0,0.17], mode = "lines", name = ("standardDeviation3end")))

fig.show()

df = pd.read_csv("medium_data.csv")
data = df["claps"].tolist()       
mean_of_sample2 = statistics.mean(data)
print("mean of sample3: ",mean_of_sample3)
ff = create_distplot([mean_list],["data"], show_hist = False) 
fig.add_trace(go.Scatter(x = [mean, mean], y = [0,0.17], mode = "lines", name = ("mean")))
fig.add_trace(go.Scatter(x = [mean_of_sample2, mean_of_sample2], y = [0,0.17] , mode = "lines", name = ("mean of article data")))
fig.add_trace(go.Scatter(x = [second_standard_devition_end, second_standard_deviation_end], y = [0,0.17], mode = "lines", name = ("standardDeviation2end")))
fig.add_trace(go.Scatter(x = [third_standard_devition_end, third_standard_deviation_end], y = [0,0.17], mode = "lines", name = ("standardDeviation3end")))

fig.show()